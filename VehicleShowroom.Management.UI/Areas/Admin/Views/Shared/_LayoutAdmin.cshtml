<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>Admin - @ViewData["Title"]</title>
    <meta name="viewport"
        content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, shrink-to-fit=no" />
    <meta name="description"
        content="This is an example dashboard (CodeLean) created using build-in elements and components.">

    <!-- Disable tap highlight on IE -->
    <meta name="msapplication-tap-highlight" content="no">
    <link rel="icon" type="image/x-icon" href="~/assets/images/favicon.ico">
    <link href="~/assets/css/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="https://cdn.ckeditor.com/4.16.1/standard/ckeditor.js"></script>

    <link href="~/assets/css/main.css" rel="stylesheet">
    <link href="~/assets/css/my_style.css" rel="stylesheet">
    <script src="~/js/signalr.js"></script>
    <style>
        .page-item {
            width: 42px;
            text-align: center;
        }

        .app-main__inner{
            padding: 10px 30px 0 !important;
        }
        .logo-src {
            font-weight: bold;
            font-size: 21px;
            line-height: 16px;
        }
    </style>
    @RenderSection("Styles", required: false)
</head>

<body>
    <div class="app-container app-theme-white body-tabs-shadow fixed-header fixed-sidebar">
        @Html.Partial("_Header")
       @*  @Html.Partial("_Setting") *@
        <div class="app-main">
            <div class="app-sidebar sidebar-shadow">
                <div class="app-header__logo">
                    <div class="logo-src"></div>
                    <div class="header__pane ml-auto">
                        <div>
                            <button type="button" class="hamburger close-sidebar-btn hamburger--elastic"
                                data-class="closed-sidebar">
                                <span class="hamburger-box">
                                    <span class="hamburger-inner"></span>
                                </span>
                            </button>
                        </div>
                    </div>
                </div>
                <div class="app-header__mobile-menu">
                    <div>
                        <button type="button" class="hamburger hamburger--elastic mobile-toggle-nav">
                            <span class="hamburger-box">
                                <span class="hamburger-inner"></span>
                            </span>
                        </button>
                    </div>
                </div>
                <div class="app-header__menu">
                    <span>
                        <button type="button"
                            class="btn-icon btn-icon-only btn btn-primary btn-sm mobile-toggle-header-nav">
                            <span class="btn-icon-wrapper">
                                <i class="fa fa-ellipsis-v fa-w-6"></i>
                            </span>
                        </button>
                    </span>
                </div>
                @Html.Partial("_Sidebar")
            </div>

            <div class="app-main__outer">
              @RenderBody()
            </div>
        </div>
    </div>
    <script src="~/assets/scripts/jquery-3.2.1.min.js"></script>
    <script src="~/assets/scripts/bootstrap.min.js"></script>
    <script type="text/javascript" src="~/assets/scripts/main.js"></script>
    <script type="text/javascript" src="~/assets/scripts/common.js"></script>
    <script type="text/javascript" src="~/assets/scripts/my_script.js"></script>
    <script type="text/javascript" src="~/assets/scripts/html2pdf.bundle.min.js"></script>
    <script type="text/javascript" src="~/assets/scripts/html2canvas.min.js"></script>
    <script type="text/javascript" src="~/assets/scripts/bootbox.min.js"></script>
    @await RenderSectionAsync("Scripts", required: false)
    @await Component.InvokeAsync("NToastNotify")
    @await Component.InvokeAsync("Notyf")
    <script>
        // Kết nối đến SignalR Hub
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/userHub")
            .build();

        // Khi có cập nhật số người dùng online
        connection.on("UpdateUserCount", function (userCount) {
            document.getElementById("userOnline").innerText = userCount;
        });

        // Cập nhật danh sách người dùng online
        connection.on("UpdateOnlineUsers", function (users) {
            const tbody = document.getElementById("userList").getElementsByTagName("tbody")[0];
            tbody.innerHTML = "";  // Clear existing rows

            // Iterate over users to create rows for each, including serial number
            users.forEach(function (user, index) {
                const tr = document.createElement("tr");

                // Create and append columns, including serial number (index + 1)
                tr.innerHTML = `
                            <td class="text-center">${index + 1}</td> <!-- Serial number -->
                            <td>${user.userName}</td>
                            <td>${user.ipAddress}</td>
                            <td>${user.email}</td>
                            <td>${user.role}</td>
                            <td>${new Date(user.connectionTime).toLocaleString()}</td>
                        `;

                tbody.appendChild(tr);
            });
        });

        // Khởi tạo kết nối
        connection.start().then(function () {
            connection.invoke("Join");
        }).catch(function (err) {
            return console.error(err.toString());
        });

        // Khi người dùng rời trang
        window.onbeforeunload = function () {
            connection.invoke("Leave").catch(function (err) {
                return console.error(err.toString());
            });
        };



        // confirm delete
        function showDeleteConfirmation(element, id, page) {
            if (!element || !id) {
                console.error("Element or ID is missing!");
                return;
            }

            // Nội dung động cho thông báo
            let message = `Do you really want to delete this ${element}?`;

            bootbox.confirm(message, function (result) {
                if (result) {
                    window.location.href = `/Admin/${element}/Delete?id=${id}&page=${page}`;
                }
            });
        }

        function showExportConfirmation(element) {
            if (!element) {
                console.error("Element is missing!");
                return;
            }

            // Nội dung động cho thông báo
            let message = `Do you really want to download this ${element}?`;

            bootbox.confirm(message, function (result) {
                if (result) {
                    window.location.href = `/Admin/${element}/ExportAll`;
                }
            });
        }
    </script>
</body>

</html>